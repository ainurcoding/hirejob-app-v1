import React, { useState, useEffect } from "react";
import Head from "next/head";
import styles from "../../styles/Home.module.css";
import gStyle from "../../styles/General.module.css";
import Link from "next/link";
import Image from "next/image";
import axios from "axios";

export default function Index() {
  const [dataSearch, setData] = useState([]);

  useEffect(() => {
    axios
      .get(
        `${process.env.APP_BACKEND_URL}/v1/user/worker/search?field=full_name&value=`
      )
      .then((res) => {
        // console.log(res.data.data.rows)
        setData(res.data.data.rows);
      })
      .catch((err) => {
        console.log(err);
      });
  }, []);

  const [formSearch, setFormSearch] = useState({
    value: '',
    field: 'full_name',
  })
  const changeHandle = (e) => {
    setFormSearch({
      ...formSearch,
      [e.target.name]: e.target.value,
    });
  };
  const onSearchHandler = (e) => {
    e.preventDefault();
    const field = formSearch.field;
    let value = formSearch.value;
    value.toLowerCase()
    if(
      value == 'free' ||
      value == 'freelance' 
    ) {
      value = 'Freelance';
    } else if (
      value == 'full time' ||
      value == 'fulltime' ||
      value == 'full'
    ) {
      value = 'Full TIme'
    } else if (
      value == 'part time' ||
      value == 'parttime' ||
      value == 'part'
    ) {
      value = 'Part TIme'
    } 

    axios
    .get(`${process.env.APP_BACKEND_URL}/v1/user/worker/search?field=${field}&value=${value}`)
    .then((res) => {
      // console.log(res.data.data.rows)
      setData(res.data.data.rows);
    })
    .catch((err) => {
      console.log(err);
    })
    
  }
  // console.log(dataSearch);
  // pagination
  const [loading, setLoading] = useState(false)
  const [currentPage, setCurrentPage] = useState(1);
  const [postsPerPage] = useState(2);

  // get current post
  const indexOfLastPost = currentPage * postsPerPage;
  const indexOfFirstPost = indexOfLastPost - postsPerPage;
  const currentPost = dataSearch.slice(indexOfFirstPost, indexOfLastPost);

  // pagination navigate
  const totalPost = dataSearch.length;
  const pageNumbers = [];
  for (let i = 1; i <= Math.ceil(totalPost / postsPerPage); i++) {
    pageNumbers.push(i);
  }

  // change page
  const paginate = (PageNumber) => setCurrentPage(PageNumber);
  if(!dataSearch){
    return (
      <>
        Loading...
      </>
    )
  }
  return (
    <>
      <Head>
        <title>Home - HireJob</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/icon.png" />
      </Head>
      <div className={`${styles["home-container"]} w-100`}>
        <div className={` ${styles["wrapper-top"]} d-flex`}>
          <div className="m-5 title d-flex justify-content-center align-items-center">
            <p className={`h3 text-white ${styles["open_sans_sb"]}`}>
              Top Jobs
            </p>
          </div>
        </div>
        <div className="wrapper-search mb-5">
          <div
            className={`m-5 ${styles["form-input"]} d-flex align-items-center`}
          >
            <form className="ms-5 w-100 d-flex" onSubmit={(e) => onSearchHandler(e)}>
              <div className="col-9">
                <input
                  type="text"
                  className={`${styles["search-input"]} `}
                  name="value"
                  placeholder="search for any skill"
                  onChange={changeHandle}
                />
              </div>
              <div className="col-2 d-flex align-items-center">
                <div className={`ms-2 ${styles["icon-search"]}`}>
                  <i className="bi bi-search ps-5"></i>
                </div>
                <div className="ms-3 select-category">
                  <select
                    className={`form-select ${styles["custom-form-select"]}`}
                    aria-label="Default select example"
                    name="field"
                    onChange={changeHandle}
                  >
                    <option selected>Sort</option>
                    <option value="job_spec">Job spesifikasi</option>
                    <option value="domisli">Lokasi</option>
                    <option value="job_type">Freelance</option>
                    <option value="job_type">fulltime</option>
                  </select>
                </div>
              </div>
              <div className="col-1 d-flex align-items-center justify-content-center">
                <div className="button-submit">
                  <button
                    type="submit"
                    className={`btn ${styles["btn-purple"]} ${gStyle["open_sans_sb"]}`}
                  >
                    Search
                  </button>
                </div>
              </div>
            </form>
          </div>
        </div>
        <div className="mb-5"></div>
        {/* card data search */}
        <div className="wrapper-person">
          {
            loading ? (<>Loading...</>) 
            : 
            currentPost.map((item, index) => (
                <div key={index} className={`ms-5 ${styles["person-card"]} d-flex`}>
                  <div
                    className={` col-2 d-flex justify-content-center align-items-center`}
                  >
                    <Image
                      src={
                        item.ava_url ? item.ava_url
                      : "/assets-img/ava-default.jpg"
                      }
                      alt="louis tomlinson"
                      className={`${styles["image-content"]}`}
                      width={50}
                      height={50}
                    ></Image>
                  </div>
                  <div className="col-7 person-info-wrapper d-flex flex-column  justify-content-center">
                    <div className="mt-3 person-name">
                      <p className={`h4 ${styles["open_sans_sb"]}`}>
                        {item.full_name}
                      </p>
                    </div>
                    <div className="person-job">
                      <p className={`text-muted ${styles["open_sans_lt"]} h6`}>
                        {item.job_spec ? <p>{item.job_spec}, {item.job_type}</p> : <p>---</p>}
                      </p>
                    </div>
                    <div className="d-flex person-position gap-2">
                      <div className="icon-maps">
                        <i className="text-muted bi bi-geo-alt"></i>
                      </div>
                      <div className="desc-position">
                        <p className={`text-muted ${styles["open_sans_lt"]}`}>
                          {item.domisli ? <p>{item.domisli}</p> : <p>unknown</p>}
                        </p>
                      </div>
                    </div>
                    <div className="ms-1 person-skills w-50 row gap-2">
                      <div className={`btn col-4 ${styles["skill-content"]}`}>
                        <p className={`${styles["open_sans_sb"]} text-white h6`}>
                          View
                        </p>
                      </div>
                    </div>
                  </div>
                  <div className="col-3 person-info-detail d-flex justify-content-center align-items-center">
                    <div className="detail-person-btn">
                      <Link href={`/profile/person_detail/${item.user_id}`}>
                        <button
                          type="button"
                          className={`button ${styles["btn-purple-search"]}`}
                        >
                          <p className={`text-white ${styles["open_sans_sb"]} h6`}>
                             Detail
                          </p>
                        </button>
                      </Link>
                    </div>
                  </div>
                </div>
              ))}
              <ul className="pagination ms-5">
                {pageNumbers.map((number) => (
                  <li key={number} className="page-item">
                    <button
                      href="!#"
                      className="btn page-link"
                      onClick={() => paginate(number)}
                    >
                      {number}
                    </button>
                  </li>
                ))}
              </ul>
            
          
        </div>
        {/* end of card data search */}
        
        

        <div className="wrapper-pagination"></div>
        <div className="spaceEmpt p-5"></div>
      </div>
    </>
  );
}

Index.layout = "L2";
